# SPDX-License-Identifier: (GPL-2.0-only OR BSD-2-Clause)
%YAML 1.2
---
$id: http://devicetree.org/schemas/sound/audio-graph-card.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: Audio Graph Card Driver Device Tree Bindings

maintainers:
  - Kuninori Morimoto <kuninori.morimoto.gx@renesas.com>

properties:
  compatible:
    enum:
      - audio-graph-card
      - audio-graph-scu-card

  dais:
    $ref: /schemas/types.yaml#/definitions/phandle-array
  label:
    maxItems: 1
  prefix:
    description: "device name prefix"
    $ref: /schemas/types.yaml#/definitions/string
  routing:
    description: |
      A list of the connections between audio components.
      Each entry is a pair of strings, the first being the
      connection's sink, the second being the connection's source.
    $ref: /schemas/types.yaml#/definitions/non-unique-string-array
  widgets:
    description: User specified audio sound widgets.
    $ref: /schemas/types.yaml#/definitions/non-unique-string-array
  convert-rate:
    description: CPU to Codec rate convert.
    $ref: /schemas/types.yaml#/definitions/uint32
  convert-channels:
    description: CPU to Codec rate channels.
    $ref: /schemas/types.yaml#/definitions/uint32
  pa-gpios:
    maxItems: 1
  hp-det-gpio:
    maxItems: 1
  mic-det-gpio:
    maxItems: 1

  port:
    description: single OF-Graph subnode
    type: object
    properties:
      reg:
        maxItems: 1
      prefix:
        description: "device name prefix"
        $ref: /schemas/types.yaml#/definitions/string
      convert-rate:
        description: CPU to Codec rate convert.
        $ref: /schemas/types.yaml#/definitions/uint32
      convert-channels:
        description: CPU to Codec rate channels.
        $ref: /schemas/types.yaml#/definitions/uint32
    patternProperties:
      "^endpoint(@[0-9a-f]+)?":
        type: object
        properties:
          remote-endpoint:
            maxItems: 1
          mclk-fs:
            description: |
              Multiplication factor between stream rate and codec mclk.
              When defined, mclk-fs property defined in dai-link sub nodes are ignored.
            $ref: /schemas/types.yaml#/definitions/uint32
          frame-inversion:
            description: dai-link uses frame clock inversion
            $ref: /schemas/types.yaml#/definitions/flag
          bitclock-inversion:
            description: dai-link uses bit clock inversion
            $ref: /schemas/types.yaml#/definitions/flag
          frame-master:
            description: Indicates dai-link frame master.
            $ref: /schemas/types.yaml#/definitions/phandle-array
            maxItems: 1
          bitclock-master:
            description: Indicates dai-link bit clock master
            $ref: /schemas/types.yaml#/definitions/phandle-array
            maxItems: 1
          dai-format:
            description: audio format.
            items:
              enum:
                - i2s
                - right_j
                - left_j
                - dsp_a
                - dsp_b
                - ac97
                - pdm
                - msb
                - lsb
          convert-rate:
            description: CPU to Codec rate convert.
            $ref: /schemas/types.yaml#/definitions/uint32
          convert-channels:
            description: CPU to Codec rate channels.
            $ref: /schemas/types.yaml#/definitions/uint32
        required:
          - remote-endpoint

  ports:
    description: multi OF-Graph subnode
    type: object
    patternProperties:
      "^port(@[0-9a-f]+)?":
        $ref: "#/properties/port"

required:
  - compatible
  - dais

additionalProperties: false

examples:
  - |
    sound {
        compatible = "audio-graph-card";

        dais = <&cpu_port_a>;
    };

    cpu {
        /*
         * dai-controller own settings
         */

        port {
            cpu_endpoint: endpoint {
                remote-endpoint = <&codec_endpoint>;
                dai-format = "left_j";
            };
        };
    };

    codec {
        /*
         * codec own settings
         */

        port {
            codec_endpoint: endpoint {
                remote-endpoint = <&cpu_endpoint>;
            };
        };
    };
