# SPDX-License-Identifier: GPL-2.0
%YAML 1.2
---
$id: http://devicetree.org/schemas/display/bridge/lvds-transmitter.yaml#
$schema: http://devicetree.org/meta-schemas/core.yaml#

title: Parallel to LVDS Encoder

maintainers:
  - Laurent Pinchart <laurent.pinchart+renesas@ideasonboard.com>

description: |
  This binding supports the parallel to LVDS encoders that don't require any
  configuration.

  LVDS is a physical layer specification defined in ANSI/TIA/EIA-644-A. Multiple
  incompatible data link layers have been used over time to transmit image data
  to LVDS panels. This binding targets devices compatible with the following
  specifications only.

  [JEIDA] "Digital Interface Standards for Monitor", JEIDA-59-1999, February
  1999 (Version 1.0), Japan Electronic Industry Development Association (JEIDA)
  [LDI] "Open LVDS Display Interface", May 1999 (Version 0.95), National
  Semiconductor
  [VESA] "VESA Notebook Panel Standard", October 2007 (Version 1.0), Video
  Electronics Standards Association (VESA)

  Those devices have been marketed under the FPD-Link and FlatLink brand names
  among others.

properties:
  compatible:
    description: |
      Any encoder compatible with this generic binding, but with additional
      properties not listed here, must define its own binding and list a device
      specific compatible first followed by the generic compatible.
    enum:
      - lvds-encoder

  ports:
    type: object
    description: |
      This device has two video ports. Their connections are modeled using the
      OF graph bindings specified in Documentation/devicetree/bindings/graph.txt
    properties:
      port@0:
        type: object
        description: |
          Port 0 is for parallel input

      port@1:
        type: object
        description: |
          Port 1 is for LVDS output

    required:
      - port@0
      - port@1

required:
  - compatible
  - ports

examples:
  - |
    lvds-encoder {
      compatible = "lvds-encoder";

      ports {
        #address-cells = <1>;
        #size-cells = <0>;

        port@0 {
          reg = <0>;

          lvds_enc_in: endpoint {
            remote-endpoint = <&display_out_rgb>;
          };
        };

        port@1 {
          reg = <1>;

          lvds_enc_out: endpoint {
            remote-endpoint = <&lvds_panel_in>;
          };
        };
      };
    };

...
